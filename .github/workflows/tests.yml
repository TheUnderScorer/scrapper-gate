name: Tests
on:
  pull_request:
    branches:
      - '*'

jobs:
  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Typecheck
        run: npm run typecheck


  test-e2e:
    needs:
      - typecheck
    name: Run e2e tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v2

      - name: Output docker-compose version
        run: docker-compose --version

      - name: Output docker version
        run: docker --version

      - uses: hashicorp/setup-terraform@v1

      - name: Set Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Setup deps
        run: npx playwright install-deps

      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Start docker
        run: sudo docker-compose up -d

      - name: Install dependencies
        run: npm ci --legacy-peer-deps && npm i ts-node -g && npm run build:tools

      - name: Wait for localstack
        run: sudo AWS_S3_ENDPOINT=http://localhost:4566 node docker/localstack/waitForLocalStack.mjs

      - name: Setup localstack
        run: cd deploy/local && terraform init && terraform apply -auto-approve

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_NX_API_URL: "http://api:3000"
          envkey_NX_SECURITY_URL: "http://security:50050"
          directory: apps/browser-extension
          file_name: .local.env

      - name: Build extension
        run: cp apps/browser-extension/.local.env.dist apps/browser-extension/.env && npx nx build browser-extension --prod

      - name: Test
        run: npx nx run browser-extension-e2e:e2e-docker

      - name: Write API logs
        run: docker-compose -f docker-compose.prod.yml logs api > api-logs.log
        if: ${{ failure() }}

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: test-artifact
          path: api-logs.log
